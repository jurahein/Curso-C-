Inferência de tipos: palavra var

pode trocar
int x = 10;

por 
var x = 10;

o C# é capaz de inferir(deduzir)

mais exemplos
	    var Y = "Nome"; deduz que é string
            var t = 20.0; deduz que é double

-------------------------------------------------------------------------------------------------------------------------------------------------------
Sintaxe alternativa: switch-case

Usar se no lugar de varios if e else encadeados

Troca se isso

int x = int.Parse(Console.ReadLine());
            string dia;

            if (x == 1)
            {
                dia = "Domingo";
            }
            else if (x == 2)
            {
                dia = "Segunda";
            }
            else if (x == 3)
            {
                dia = "Terça";
            }
            else if (x == 4)
            {
                dia = "Quarta";
            }
            else if (x == 5)
            {
                dia = "Quinta";
            }
            else if (x == 6)
            {
                dia = "Sexta";
            }
            else if (x == 7)
            {
                dia = "Sabado";
            }
            else
            {
                dia = "Invalido";
            }
            Console.WriteLine(dia);
        }



por isso

int x = int.Parse(Console.ReadLine());
            string dia;

            switch (x)
            {
                case 1:
                    dia = "Domingo";
                    break;
                case 2:
                    dia = "Segunda";
                    break;
                case 3:
                    dia = "Terça";
                    break;
                case 4:
                    dia = "Quarta";
                    break;
                case 5:
                    dia = "Quinta";
                    break;
                case 6:
                    dia = "Sexta";
                    break;
                case 7:
                    dia = "Sabado";
                    break;
                default:
                    dia = "Invalido";
                    break;
            }
            Console.WriteLine(dia);


-------------------------------------------------------------------------------------------------------------------------------------------------------

Expressão condicional ternária
Estrutura opcional ao if-else quando se deseja decidir um VALOR com base em uma
condição.

Sintaxe:

( condição ) ? valor_se_verdadeiro : valor_se_falso

EXEMPLO:

( 2 > 4 ) ? 50 : 80


( 10 != 3 ) ? "Maria" : "Alex" "Maria"

Troca isso 
	
	double preco = double.Parse(Console.ReadLine());
	double desconto;

	double preco = 34.5;
	double desconto;
	if (preco < 20.0) {
	desconto = preco * 0.1;
	}
	else {
	desconto = preco * 0.05;
	}


por
double preco = 34.5;
double desconto = (preco < 20.0) ? preco * 0.1 : preco * 0.05;

-------------------------------------------------------------------------------------------------------------------------------------------------------

Funções interessantes para string

• Formatar: ToLower(), ToUpper(), Trim()
• Buscar: IndexOf, LastIndexOf
• Recortar: Substring(inicio), Substring(inicio, tamanho)
• Substituir: Replace(char, char), Replace(string, string)
• String.IsNullOrEmpty(str), String.IsNullOrWhiteSpace(str)
• str.Split(' ')
• Conversão para numero: int x = int.Parse(str), int x =Convert.ToInt32(str)
• Conversão de número: str = x.ToString(), str = x.ToString("C"), str =
x.ToString("C3"), str = x.ToString("F2")


	    string original = "abcde FGHIJ ABC abc DEFG    ";
            //deixa todas as letras Maiusculas
            string s1 = original.ToUpper();
            //deixa todas as letras Minusculas
            string s2 = original.ToLower();
            // Apaga espaços em branco tanto antes como depois
            string s3 = original.Trim();
            // corta a string a partir do numero declarado no parentese
            string s4 = original.Substring(3);
            // corta a string a partir do numero declarado no parentese e apenas  tanto de caracteres declarado no parenteses 
            string s5 = original.Substring(3, 5);
            // subistituindo todo caracter a por x
            string s6 = original.Replace('a', 'x');
            // subistituindo toda a ocorrencia abc por xy, não precisa ter o mesmo tamanho
            string s7 = original.Replace("abc", "xy");

            // Verifica se a variavel original, é null ou vazio, usado para ver se o usuario deixou algum campo em branco
            bool b1 = String.IsNullOrEmpty(original);
            // verifica se a variavel e nulo ou monte de espaço em branco
            bool b2 = String.IsNullOrWhiteSpace(original);

            // procura a primeira posição que tiver dentro do parenteses na string
            int n1 = original.IndexOf("bc");
            // procura a ultima posição que tiver dentro do parenteses na string
            int n2 = original.LastIndexOf("bc");

-------------------------------------------------------------------------------------------------------------------------------------------------------
DATETIME

	    // d1 recebe a data atual do computador
            DateTime d1 = DateTime.Now;
            // colocando uma data no DateTime
            DateTime d2 = new DateTime(2020, 06, 02);
            // colocando uma data e hora no  DateTime
            DateTime d3 = new DateTime(2020, 06, 02, 23, 25, 00);
            //Data atual mas sem o horario
            DateTime d4 = DateTime.Today;
            // data e horario universal
            DateTime d5 = DateTime.UtcNow;
            
            // aceita a formatação por string
            DateTime dd1 = DateTime.Parse("2000-08-15");
            DateTime dd2 = DateTime.Parse("2000-08-15 13:05:58");
            DateTime dd3 = DateTime.Parse("02/06/2019 23:33:50");
            /// Formatando do jeito que quiser
            DateTime p1 = DateTime.ParseExact("200-08-15", "yyyy-MM-dd", CultureInfo.InvariantCulture);
            DateTime p2 = DateTime.ParseExact("15/08/2000 23:36:00", "dd-/MM/yyyy", CultureInfo.InvariantCulture);


-------------------------------------------------------------------------------------------------------------------------------------------------------
TimeSpan

• Representa uma DURAÇÃO
• É um tipo valor (struct)


TimeSpan t1 = new TimeSpan(0, 1, 30);
Console.WriteLine(t1);


TimeSpan t1 = new TimeSpan();
TimeSpan t2 = new TimeSpan(900000000L);
TimeSpan t3 = new TimeSpan(2, 11, 21);
TimeSpan t4 = new TimeSpan(1, 2, 11, 21);
TimeSpan t5 = new TimeSpan(1, 2, 11, 21, 321);


Métdo From

TimeSpan t1 = TimeSpan.FromDays(1.5);
TimeSpan t2 = TimeSpan.FromHours(1.5);
TimeSpan t3 = TimeSpan.FromMinutes(1.5);
TimeSpan t4 = TimeSpan.FromSeconds(1.5);
TimeSpan t5 = TimeSpan.FromMilliseconds(1.5);
TimeSpan t6 = TimeSpan.FromTicks(900000000L);

-------------------------------------------------------------------------------------------------------------------------------------------------------

Propriedades e Operações com
DateTime



• Date (DateTime)
• Day (int)
• DayOfWeek (DayOfWeek)
• DayOfYear (int)
• Hour (int)
• Kind (DateTimeKind)
• Millisecond (int)
• Minute (int)
• Month (int)
• Second (int)
• Ticks (long)
• TimeOfDay (TimeSpan)
• Year (int)

Alguns exemplos

	    DateTime d = new DateTime(2001, 8, 15, 13, 45, 58, 275);

            Console.WriteLine(d);
            //Imprimi com o hora zerada
            Console.WriteLine("1) Date: " + d.Date);
            // imprimi so o dia
            Console.WriteLine("1) Date: " + d.Day);
            // imprimi o dia do ano
            Console.WriteLine("1) Date: " + d.Year);
            // imprimi o dia da semana
            Console.WriteLine("1) Date: " + d.DayOfWeek);
 	    // imprimi em escrito
            Console.WriteLine(d.ToLongDateString());



	    // adicionando duas horas ao datetime
            DateTime d2 = d.AddHours(2);
            // adicionando 3 minutos ao datetime
            DateTime d3 = d.AddMinutes(3);
-------------------------------------------------------------------------------------------------------------------------------------------------------

Propriedades e Operações com
TimeSpan


	    //valor maximo de um timespam
            TimeSpan t1 = TimeSpan.MaxValue;
            //valor minimo de um timespam
            TimeSpan t2 = TimeSpan.MinValue;
            TimeSpan t3 = TimeSpan.Zero;
            Console.WriteLine(t1);
            Console.WriteLine(t2);
            Console.WriteLine(t3);


	   TimeSpan t = new TimeSpan(2, 3, 5, 7, 11);
	   Console.WriteLine(t);
	   Console.WriteLine("Days: " + t.Days);
	   Console.WriteLine("Hours: " + t.Hours);
	   Console.WriteLine("Minutes: " + t.Minutes);
	   Console.WriteLine("Milliseconds: " + t.Milliseconds);
	   Console.WriteLine("Seconds: " + t.Seconds);
	   Console.WriteLine("Ticks: " + t.Ticks);
	   Console.WriteLine("TotalDays: " + t.TotalDays);
	   Console.WriteLine("TotalHours: " + t.TotalHours);
	   Console.WriteLine("TotalMinutes: " + t.TotalMinutes);
	   Console.WriteLine("TotalSeconds: " + t.TotalSeconds);
	   Console.WriteLine("TotalMilliseconds: " + t.TotalMilliseconds);

OPERAÇÕES MATEMÁTICAS - TIMESPAM

	TimeSpan t1 = new TimeSpan(1, 30, 10);
	TimeSpan t2 = new TimeSpan(0, 10, 5);
	TimeSpan sum = t1.Add(t2);
	TimeSpan dif = t1.Subtract(t2);
	TimeSpan mult = t2.Multiply(2.0);
	TimeSpan div = t2.Divide(2.0);

	Console.WriteLine(t1);
	Console.WriteLine(t2);
	Console.WriteLine(sum);
	Console.WriteLine(dif);
	Console.WriteLine(mult);
	Console.WriteLine(div);

-------------------------------------------------------------------------------------------------------------------------------------------------------

DateTimeKind e Padrão ISO 8601


DateTimeKind

	   DateTime d1 = new DateTime(2000, 8, 15, 13, 5, 58, DateTimeKind.Local);
           DateTime d2 = new DateTime(2000, 8, 15, 13, 5, 58, DateTimeKind.Utc);
           DateTime d3 = new DateTime(2000, 8, 15, 13, 5, 58);


            Console.WriteLine("d1: " + d1);
            Console.WriteLine("d1: Kind " + d1.Kind);
            Console.WriteLine("d1: to Local " + d1.ToLocalTime());
            Console.WriteLine("d1: to UTC " + d1.ToUniversalTime());



Padrão ISO 8601

Formato:
yyyy-MM-ddTHH:mm:ssZ (Z indica que a data/hora está em Utc)


	    DateTime d1 = DateTime.Parse("2000-08-15 13:05:58");
            DateTime d2 = DateTime.Parse("2000-08-15T13:05:58Z"); // cria local DateTime

            Console.WriteLine("d1: " + d1);
            Console.WriteLine("d1 Kind: " + d1.Kind);
            Console.WriteLine("d1 to Local: " + d1.ToLocalTime());
            Console.WriteLine("d1 to Utc: " + d1.ToUniversalTime());
            Console.WriteLine();
            Console.WriteLine("d2: " + d2);
            Console.WriteLine("d2 Kind: " + d2.Kind);
            Console.WriteLine("d2 to Local: " + d2.ToLocalTime());
            Console.WriteLine("d2 to Utc: " + d2.ToUniversalTime());
            Console.WriteLine();
            Console.WriteLine(d2.ToString("yyyy-MM-ddTHH:mm:ssZ")); // cuidado! o correto é o debaixo
            Console.WriteLine(d2.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ssZ"));



















